<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gtopba (Posts about git)</title><link>https://gtopba.github.io/</link><description></description><atom:link href="https://gtopba.github.io/categories/git.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2018 &lt;a href="mailto:gtopba@gmail.com"&gt;Warut Phothiphan&lt;/a&gt; </copyright><lastBuildDate>Sun, 03 Jun 2018 19:00:33 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Github Fork, Sync Fork</title><link>https://gtopba.github.io/posts/github-fork-sync-fork/</link><dc:creator>Warut Phothiphan</dc:creator><description>&lt;div&gt;&lt;div class="section" id="fork"&gt;
&lt;h2&gt;Fork&lt;/h2&gt;
&lt;p&gt;In the top-right corner of the page, click Fork. That's it! Now, you have a fork of the original repository. You can now modified your fork without effecting the original repo. New commits from the main repo won't effect your fork. You need to manually sync your fork with the original repo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sync-fork"&gt;
&lt;h2&gt;Sync Fork&lt;/h2&gt;
&lt;p&gt;Create a local clone of your fork:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git clone https://github.com/YOUR-USERNAME/YOUR-FORK.git
&lt;/pre&gt;
&lt;p&gt;sync your fork with the original repository:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git remote -v
git remote add upstream https://github.com/ORIGINAL-OWNER/ORIGINAL-REPO.git
git remote -v
git fetch upstream
&lt;/pre&gt;
&lt;p&gt;Check out your fork's local branch.:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git checkout edge
&lt;/pre&gt;
&lt;p&gt;Merge the changes from upstream/edge into your local edge branch. This brings your fork's edge branch into sync with the upstream repository, without losing your local changes.:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git merge upstream/edge
&lt;/pre&gt;
&lt;p&gt;push commits made on your local branch to a remote repository.:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git push  &amp;lt;REMOTENAME&amp;gt; &amp;lt;BRANCHNAME&amp;gt;
&lt;/pre&gt;
&lt;p&gt;As an example, you usually run git push origin edge to push your local changes to your online repository.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://help.github.com/articles/fork-a-repo/"&gt;Fork a repo&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://help.github.com/articles/set-up-git/#next-steps-authenticating-with-github-from-git"&gt;Authenticating with GitHub from Git&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://help.github.com/articles/syncing-a-fork/"&gt;Syncing a fork&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://help.github.com/articles/pushing-to-a-remote/"&gt;Pushing to a remote&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>git</category><category>github</category><guid>https://gtopba.github.io/posts/github-fork-sync-fork/</guid><pubDate>Thu, 24 May 2018 08:20:52 GMT</pubDate></item><item><title>Deploying the static website to GitHub.</title><link>https://gtopba.github.io/posts/deploying-the-static-website-to-github/</link><dc:creator>Warut Phothiphan</dc:creator><description>&lt;div&gt;&lt;p&gt;Assuming you already created a github.io repository following the instruction from this link &lt;a class="reference external" href="https://pages.github.com/"&gt;https://pages.github.com/&lt;/a&gt; and already install the 'Git&amp;lt;&lt;a class="reference external" href="https://git-scm.com/downloads"&gt;https://git-scm.com/downloads&lt;/a&gt;&amp;gt;'_ software according to your operating system. Given the original 'github_deploy&amp;lt;&lt;a class="reference external" href="https://getnikola.com/handbook.html#deploying-to-github"&gt;https://getnikola.com/handbook.html#deploying-to-github&lt;/a&gt;&amp;gt;'_ tutorial, I will explain more where you might get confused.&lt;/p&gt;
&lt;p&gt;Initialize a git repository in your Nikola source directory by running:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git init.
git remote add origin git@github.com:user/repository.git
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;user : your Github username, for example, "deadbeef"&lt;/li&gt;
&lt;li&gt;repository : your github.io repository, for example, deadbeef.github.io.git&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;so the command should be:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git remote add origin git@github.com:deadbeef/deadbeef.github.io.git
&lt;/pre&gt;
&lt;p&gt;Then, setup conf.py:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
GITHUB_SOURCE_BRANCH = 'src'
GITHUB_DEPLOY_BRANCH = 'master'
GITHUB_REMOTE_NAME = 'origin'
GITHUB_COMMIT_SOURCE = True
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;'src' means your Nikola source branch's name is src&lt;/li&gt;
&lt;li&gt;'master' means your compiled static website branch's name is master&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create a .gitignore file containing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cache
.doit.db
__pycache__
output
&lt;/pre&gt;
&lt;p&gt;Finally, deploying:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
nikola github_deploy
&lt;/pre&gt;
&lt;p&gt;first time it will ask you to log in to your github account. Then, you should be able to access you website &lt;a class="reference external" href="https://deadbeef.github.io"&gt;https://deadbeef.github.io&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>git</category><category>github</category><category>nikola</category><guid>https://gtopba.github.io/posts/deploying-the-static-website-to-github/</guid><pubDate>Thu, 06 Jul 2017 15:24:34 GMT</pubDate></item></channel></rss>